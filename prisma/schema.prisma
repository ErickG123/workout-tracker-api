// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  workoutPlans      WorkoutPlan[]      @relation("UserWorkoutPlans")
  scheduledWorkouts ScheduledWorkout[] @relation("UserScheduledWorkouts")
  createdAt         DateTime           @default(now())
}

model Category {
  id        String     @id @default(uuid())
  name      String     @unique
  exercises Exercise[]
}

model MuscleGroup {
  id        String     @id @default(uuid())
  name      String     @unique
  exercises Exercise[]
}

model Exercise {
  id                   String                @id @default(uuid())
  name                 String
  description          String
  categoryId           String
  muscleGroupId        String
  category             Category              @relation(fields: [categoryId], references: [id])
  muscleGroup          MuscleGroup           @relation(fields: [muscleGroupId], references: [id])
  workoutPlanExercises WorkoutPlanExercise[]
}

model WorkoutPlan {
  id                String                @id @default(uuid())
  userId            String
  name              String
  description       String
  user              User                  @relation("UserWorkoutPlans", fields: [userId], references: [id])
  exercises         WorkoutPlanExercise[]
  scheduledWorkouts ScheduledWorkout[]
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
}

model WorkoutPlanExercise {
  id            String      @id @default(uuid())
  workoutPlanId String
  exerciseId    String
  order         Int
  sets          Int
  reps          Int
  weight        Float
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
  exercise      Exercise    @relation(fields: [exerciseId], references: [id])
}

model ScheduledWorkout {
  id            String      @id @default(uuid())
  userId        String
  workoutPlanId String
  scheduledAt   DateTime
  notes         String?
  completed     Boolean     @default(false)
  user          User        @relation("UserScheduledWorkouts", fields: [userId], references: [id])
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
}
